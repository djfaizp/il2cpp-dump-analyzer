# IL2CPP Dump Analyzer MCP Server Configuration
# Copy this file to .env and customize the values for your setup

# =============================================================================
# CORE CONFIGURATION
# =============================================================================

# Node.js environment (development, production, test)
NODE_ENV=production

# Path to your IL2CPP dump.cs file
# Can be absolute or relative to the current working directory
DUMP_FILE_PATH=./dump.cs

# Embedding model to use for semantic search
# Options: Xenova/all-MiniLM-L6-v2, Xenova/all-mpnet-base-v2, etc.
EMBEDDING_MODEL=Xenova/all-MiniLM-L6-v2

# Logging level (error, warn, info, debug)
LOG_LEVEL=info

# =============================================================================
# VECTOR STORE CONFIGURATION
# =============================================================================

# Chunk size for text splitting (default: 1000)
CHUNK_SIZE=1000

# Chunk overlap for text splitting (default: 200)
CHUNK_OVERLAP=200

# Hash file path for tracking processed files (optional)
HASH_FILE_PATH=./processed_files.json

# Force reprocessing of files even if already processed (true/false)
FORCE_REPROCESS=false

# =============================================================================
# SUPABASE CONFIGURATION (Optional - for cloud vector storage)
# =============================================================================

# Supabase project URL
SUPABASE_URL=your_supabase_url

# Supabase anon key
SUPABASE_ANON_KEY=your_supabase_anon_key

# Supabase service role key (for admin operations)
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key

# Supabase table name for storing documents
SUPABASE_TABLE=il2cpp_documents

# Supabase table name for storing file hashes (optional, defaults to 'file_hashes')
SUPABASE_FILE_HASHES_TABLE=file_hashes

# =============================================================================
# DATABASE PERFORMANCE & OPTIMIZATION
# =============================================================================

# Connection pool settings
DB_MAX_CONNECTIONS=10
DB_MIN_CONNECTIONS=2
DB_IDLE_TIMEOUT_MS=30000
DB_ACQUIRE_TIMEOUT_MS=10000

# Enable database health checks (true/false)
DB_ENABLE_HEALTH_CHECKS=true
DB_HEALTH_CHECK_INTERVAL_MS=60000

# Retry configuration
DB_MAX_RETRY_ATTEMPTS=3
DB_INITIAL_RETRY_DELAY_MS=500
DB_MAX_RETRY_DELAY_MS=5000

# Circuit breaker settings
DB_CIRCUIT_BREAKER_FAILURE_THRESHOLD=5
DB_CIRCUIT_BREAKER_TIMEOUT_MS=60000

# Performance monitoring
DB_ENABLE_PERFORMANCE_MONITORING=true
DB_MAX_PERFORMANCE_METRICS=1000

# Caching configuration
DB_ENABLE_CACHING=true
DB_DEFAULT_CACHE_TTL_MS=300000
DB_MAX_CACHE_SIZE=500

# =============================================================================
# HTTP SERVER CONFIGURATION (for HTTP transport mode)
# =============================================================================

# Server port (default: 3000)
PORT=3000

# Server host (default: localhost)
HOST=localhost

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Maximum number of search results to return (default: 50)
MAX_SEARCH_RESULTS=50

# Enable caching for better performance (true/false)
ENABLE_CACHING=true

# Cache directory for embeddings and processed data
CACHE_DIR=./cache

# Model cache directory for downloaded embedding models
MODEL_CACHE_DIR=./models
